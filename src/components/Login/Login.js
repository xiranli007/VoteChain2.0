import React, { useState, useEffect } from "react";
import { Link, useNavigate } from "react-router-dom";
import { signInWithEmailAndPassword } from "firebase/auth";
import { auth } from "../../firebase";
import emailjs from "emailjs-com"; // Email service for OTP
import { Container, Row, Col, Form, FormGroup, Label, Input, Button, Alert } from "reactstrap";
import styles from "./Login.module.css";
import loginImage from "../../assest/login_undraw.svg";

function Login() {
  const navigate = useNavigate();
  const [values, setValues] = useState({ email: "", pass: "" });
  const [otp, setOtp] = useState(""); // OTP entered by the user
  const [generatedOtp, setGeneratedOtp] = useState(""); // OTP generated by the system
  const [step, setStep] = useState(1); // Step 1 for login, Step 2 for OTP verification
  const [errorMsg, setErrorMsg] = useState("");
  const [submitButtonDisabled, setSubmitButtonDisabled] = useState(false);
  const [otpVerified, setOtpVerified] = useState(false); // New state to manage OTP verification

  // Function to generate a 6-digit OTP
  const generateOtp = () => Math.floor(100000 + Math.random() * 900000).toString();

  // Function to handle the email and password login
  const handleSubmission = async () => {
    if (!values.email || !values.pass) {
      setErrorMsg("Fill all fields");
      return;
    }
    setErrorMsg("");
    setSubmitButtonDisabled(true);

    try {
      // Perform Firebase email/password login
      const res = await signInWithEmailAndPassword(auth, values.email, values.pass);
      const user = res.user;

      // check if the user;s email is verified

      if (!user.emailVerified) {
        setErrorMsg("Please verify your email before logging in.");
        await auth.signOut(); // Sign out the unverified user
        setSubmitButtonDisabled(false);
        return;
      }

      // Generate OTP and send it via email
      const otpCode = generateOtp();
      setGeneratedOtp(otpCode);

      // Send OTP to user's email using EmailJS
      await emailjs.send(
        "service_ung542x",       
        "template_pxz840y",       
        { to_email: values.email, otp: otpCode },
        "ssHxJNhH5p4KKMeFo"   
      );

      alert("OTP has been sent to your email.Please also check your spam folder");
      setStep(2); // Move to OTP verification step
    } catch (error) {
      setErrorMsg("Login failed: " + error.message);
      setSubmitButtonDisabled(false);
    }
  };

  // Function to verify the OTP
  const handleVerifyOtp = () => {
    if (otp === generatedOtp) {
      alert("2FA successful! You are now logged in.");
      setOtpVerified(true); // Set OTP verified to true
    } else {
      setErrorMsg("Invalid OTP. Please try again.");
    }
  };

  // useEffect to navigate when OTP verification is successful
  useEffect(() => {
    if (otpVerified) {
      navigate("/elections");
    }
  }, [otpVerified, navigate]); // Triggered when otpVerified changes to true

  return (
    <Container className={styles.container}>
      <Row className="justify-content-center">
        <Col md="6" className={styles.imageCol} style={{ paddingRight: "50px" }}>
          <div className={styles.imageContainer}>
            <img src={loginImage} alt="Login" className={styles.loginImage} />
          </div>
        </Col>
        <Col md="6">
          <div className={styles.innerBox}>
            <h1 className={styles.heading}>Login</h1>

            {errorMsg && <Alert color="danger">{errorMsg}</Alert>}

            <Form>
              {step === 1 ? (
                <>
                  {/* Step 1: Email and Password Login */}
                  <FormGroup>
                    <Label for="email">Email</Label>
                    <Input
                      type="email"
                      id="email"
                      placeholder="Enter email address"
                      value={values.email}
                      onChange={(event) =>
                        setValues((prev) => ({ ...prev, email: event.target.value }))
                      }
                    />
                  </FormGroup>
                  <FormGroup>
                    <Label for="password">Password</Label>
                    <Input
                      type="password"
                      id="password"
                      placeholder="Enter Password"
                      value={values.pass}
                      onChange={(event) =>
                        setValues((prev) => ({ ...prev, pass: event.target.value }))
                      }
                    />
                  </FormGroup>
                  <div className={styles.footer}>
                    <Button
                      color="primary"
                      disabled={submitButtonDisabled}
                      onClick={handleSubmission}
                    >
                      {submitButtonDisabled ? "Logging in..." : "Login"}
                    </Button>
                    <p>
                      Don't have an account?{" "}
                      <span>
                        <Link to="/signup">Signup</Link>
                      </span>
                    </p>
                  </div>
                </>
              ) : (
                <>
                  {/* Step 2: OTP Verification */}
                  <FormGroup>
                    <Label for="otp">Enter OTP</Label>
                    <Input
                      type="text"
                      id="otp"
                      placeholder="Enter the OTP sent to your email"
                      value={otp}
                      onChange={(event) => setOtp(event.target.value)}
                    />
                  </FormGroup>
                  <div className={styles.footer}>
                    <Button
                      color="primary"
                      onClick={handleVerifyOtp}
                    >
                      Verify OTP
                    </Button>
                  </div>
                </>
              )}
            </Form>
          </div>
        </Col>
      </Row>
    </Container>
  );
}

export default Login;